diff --git a/BibleReadingTracker.d b/BibleReadingTracker.d
index 5f6a69f..085826a 100755
--- a/BibleReadingTracker.d
+++ b/BibleReadingTracker.d
@@ -151,11 +151,9 @@ ulong[] chapters = [
 ];
 
 ulong[string] idByBook;
-ulong[string] chaptersByBook;
 
 static this() {
   idByBook = books.enumerate.map!(reverse).assocArray();
-  chaptersByBook = books.zip(chapters).assocArray();
   resetIeeeFlags();
 }
 
@@ -322,30 +320,30 @@ struct Chapter {
 }
 
 struct ReadingSection {
-  string[] bookNames;
+  ulong[] bookIDs;
   ulong totalChapters;
   
   this(BookRange[] bookRangeList) {
     foreach (bookRange; bookRangeList)
-      bookNames ~= bookRange.array();
-
-    totalChapters = bookNames
-      .map!(b => chaptersByBook[b])
+      bookIDs ~= iota(bookRange.frontID, bookRange.backID + 1).array();
+
+    totalChapters = bookIDs
+      .map!(a => chapters[a])
       .sum();
   } 
 
   string decodeChapterID(ulong chapterID) {
-    auto chaptersBook = bookNames
-      .map!(a => chaptersByBook[a])
+    auto chaptersBook = bookIDs
+      .map!(a => chapters[a])
       .cumulativeFold!((a, b) => a + b)
-      .zip(bookNames)
+      .zip(bookIDs)
       .find!(a => a[0] >= chapterID)
       .front;
 
-    string book = chaptersBook[1];
-    ulong chapter = chapterID - (chaptersBook[0] - chaptersByBook[book]);
+    ulong bookID = chaptersBook[1];
+    ulong chapter = chapterID - (chaptersBook[0] - chapters[bookID]);
+    return format("%s %d", books[bookID], chapter);
 
-    return format("%s %d", book, chapter);
   }
 
   long encodeChapterID(string bookAndChapter) {
@@ -356,11 +354,13 @@ struct ReadingSection {
 
     splitNdx = bookAndChapter.length - 1 - bookAndChapter.retro.indexOf(' ');
     bookName = bookAndChapter[0 .. splitNdx];
-    chapter = bookAndChapter[splitNdx + 1 .. $].to!long;
+    chapter = bookAndChapter[splitNdx + 1 .. $].to!ulong;
+
+    ulong bookID = idByBook[bookName];
 
-    return bookNames
-      .until(bookName)
-      .map!(b => chaptersByBook[b])
+    return bookIDs
+      .until(bookID)
+      .map!(a => chapters[a])
       .sum() + chapter;
   }
 
